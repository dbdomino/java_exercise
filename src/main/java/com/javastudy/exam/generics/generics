지네릭스, generics란?

소스의 타입을 지정해서 컴파일시 타입을 체크해주는 기능 (jdk1.5부터 지원)
소스 외부에서 타입을 지정해 원하는 타입을 받을 수 있게 해줌

ArrayList<Gen01> list = new ArrayList<Gen01>();   // 이는 Tv 객체만 저장하겠다고 선언한 것

        list.add(new Gen01());    //
        list.add(new Gen02()); // 안됨, Gen02가 Gen01을 상속받든지 해서 형변환 가능하지 않으면 안됨.

※ 타입변수
클래스를 작성할 때, Object타입 대신 타입 변수(E)를 선언해서 사용
사용자정의 문구를 써서 받은 타입을 적용시키는데 사용하며, 주로 쓰는 문구는 다음과 같다.
<T>	Type
<E>	Element
<K>	Key
<V>	Value
<N>	Number

※ 지네릭스 용어
Box<T>  지네릭 클래스, 'T의 Box' 또는 'T Box'라고 읽음
T       타입 변수 또는 타입 매개변수.(T는 타입 문자)
Box     원시 타입(raw typ), 일반 클래스(원래 타입)

        지네릭타입
Class Box <T>     { }
    원시타입

   대입된타입            대입된타입(매개변수타입)
Box<String> b = new Box<String>();

※ 지네릭 클래스간 다형성은 성립함.
List<Tv> list = new ArrayList<Tv>();  // 지네릭 설정된 ArrayList가 List를 구현
List<Tv> list = new LinkedList<Tv>(); // 지네릭 설정된 LinkedList가 List를 구현
※ 매개변수의 다형성도 성립
ArrayList<Product> list = new ArrayList<Product>();
list.add(new Product());
list.add(new Tv());     // Product를 상속받은 Tv 클래스라면 가능
list.add(new Audio());  //


리스트에 형변환을 사용하여, 해당타입만 저장시키게 된다면, get()할때도 형변환 없이 바로 사용 가능하다.