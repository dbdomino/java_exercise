TreeSet
이진 탐색 트리 라는 자료구조의 형태로 데이터를 저장하는 컬렉션

이진탐색트리 (하나의 노드가 최대 2개의 하위 노드를 갖는 트리로 검색하는 속도가 일반 배열보다 빠르다. 입력은 느리다.)
저장된 개수가 증가할수록 검색속도도 증거하나, logN만큼의 속도증가로 검색효율이 뛰어나다.
다만 데이터를 순차적으로 저장하는 것이 아니라 저장위치를 찾아서 저장해야하고, 삭제하는 경우 트리의 일부를 재구성해야 하므로
링크드 리스트보다 데이터의 추가/삭제시간은 더 걸린다.
대신 배열이나 LinkedList보다 검색과 정렬기능이 뛰어나다.

class TreeNode{
    TreeNode left;  // 왼쪽 자식노드  부모보다 작은 값
    Object element; // 객체를 저장하기 위한 참조변수 (자기 자신의 값을 저장하는 참조변수)
    TreeNode right; // 오른쪽 자식 노드  부모보다 큰 값
}

링크드리스트 노드랑 다르다.
class Node {
    Node nextNode;
    object element;
}


TreeSet()  기본 생성자
TreeSet (Collection c)   주어진 컬렉션을 저장하는 TreeSet을 생성 주어진 정렬조건으로 정렬하는 TreeSet을 생성
TreeSet(Comparator comp)   주어진 정렬조건으로 정렬하는 TreeSet을 생성
TreeSet (SortedSets)     주어진 컬렉션(SortedSet구현) s를 저장하는 TreeSet 생성
boolean add (Object o)          지정된 객체(o) 또는 Collection(c)의 객체들을 Collection 에 추가
boolean addAll(Collection c)    지정된 객체(o) 또는 Collection(c)의 객체들을 Collection 에 추가
Object ceiling (Object o)        지정된 객체와 같은 객체를 반환. 없으면 큰 값을 가진 객체 중 제일 가까운 값의 객체를 반환. 없으면 null
void clear()                    저장된 모든 객체를 삭제
Object clone()                  TreeSet을 복제하여 반환
Comparator comparator()         TreeSet의 정렬기준 (Comparator)를 반환
boolean contains (Object o)     지정된 객체(0) 또는 Collection의 객체들이 모두 포함되어 있는지 확인
boolean containsAll (Collection 지정된 객체(0) 또는 Collection의 객체들이 모두 포함되어 있는지 확인
NavigableSet descendingSet()    TreeSet에 저장된 요소들을 역순으로 정렬해서 반환
Object first()          정렬된 순서에서 첫 번째 객체를 반환
Object floor (Object o) 지정된 객체와 같은 객체를 반환. 없으면 작은 값을 가진 객체중 제일 가까운 값의 객체를 반환. 없으면 null
SortedSet headSet (Object toElement)        지정된 객체보다 작은 값의 객체들을 반환
NavigableSet headSet (Object toElement. boolean inclusive)   지정된 객체보다 작은 값의 객체들을 반환, inclusive가 true이면, 같은 값의 객체도 포함
Object higher (Object o)    지정된 객체보다 큰 값을 가진 객체 중 제일 가까운 값의 객체를 반환. 없으면 null
boolean isEmpty()           TreeSet이 비어있는지 확인
Iterator iterator()         TreeSet의 Iterator를 반환
Object last()               정렬된 순서에서 마지막 객체를 반환
Object lower (Object o)     지정된 객체보다 작은 값을 가진 객체 중 제일 가까운 값의 객체를 반환. 없으면 null
Object pollFirst()          TreeSet의 첫번째 요소(제일 작은 값의 객체)를 반환.
Object pollLast()           TreeSet의 마지막 번째 요소(제일 큰 값의 객체)를 반환. 지정된 객체를 삭제
boolean remove(Object o)            지정된 객체를 삭제
boolean retainAll(Collection c)     주어진 컬렉션과 공통된 요소만을 남기고 삭제(교집합만 남김)
int size()                          저장된 객체의 개수
Spliterator spliterator()           TreeSet의 spliterator를 반환
SortedSet subSet (Object fromElement, Object toElement)     범위 검색(fromElement와 toElement사이)의 결과를 반환 한다. (끝 범위인 toElement는 범위에 포함되지 않음)
NavigableSet subSet(Object fromElement, boolean frominclusive, Object toElement, boolean tolnclusive)      범위 검색(fromElement와 toElement사이)의 결과를 반환한다. (fromInclusize가 true면 시작값이 포함되고, tolnclusive가 true면 끝값이 포함된다.)
SortedSet tailSet (Object fromElement)      지정된 객체보다 큰 값의 객체들을 반환한다.
Object[] toArray()                          저장된 객체를 객체배열로 반환한다.
Object[] toArray (Object[] a)               저장된 객체를 주어진 객체배열에 저장하여 반환한다.

